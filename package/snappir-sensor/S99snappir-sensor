#!/bin/sh

NAME=snappir-sensor
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/$NAME/pid

if [[ ! -f /etc/default/$NAME ]]; then
   exit 0
fi

. /etc/default/$NAME


start() {
	echo -n "Starting $NAME: "
	start-stop-daemon --start -b --quiet --pidfile "$PIDFILE" --exec "$DAEMON" -- $SNAPPIR_OSC_SERVER $SNAPPIR_OSC_PORT
	[ $? = 0 ] && echo "OK" || echo "FAIL"
}

stop() {
	echo -n "Stopping $NAME: "
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	# Wait for children to finish too if this is a daemon that forks
	# and if the daemon is only ever run from this initscript.
	# If the above conditions are not satisfied then add some other code
	# that waits for the process to drop all resources that could be
	# needed by services started subsequently.  A last resort is to
	# sleep for some time.
	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
	[ "$?" = 2 ] && return 2
	# Many daemons don't delete their pidfiles when they exit.
	rm -f $PIDFILE
	return "$RETVAL"
}

restart() {
	stop
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	restart
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?

